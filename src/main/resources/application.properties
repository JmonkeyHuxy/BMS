server.port=8080
##  自定义数据库配置  ##
spring.datasource.druid.url: jdbc:mysql://127.0.0.1:3306/ct_v1.0
spring.datasource.druid.username: root
spring.datasource.druid.password:
spring.datasource.druid.driver-class-name: com.jdbc.mysql.Driver
spring.datasource.druid.db-type: com.alibaba.druid.pool.DruidDataSource
#### Druid Supplementary Settings ####
#配置初始连接池大小,最小连接数,最大连接数
spring.datasource.druid.initial-size: 5
spring.datasource.druid.min-idle: 5
spring.datasource.druid.max-active: 20
#配置获取连接超时的最大时长(ms)
spring.datasource.druid.max-wait: 60000
#配置空闲连接检测时间间隔(ms)
spring.datasource.druid.time-between-eviction-runs-millis: 60000
#配置连接在连接池中的最小生存时长(ms)
spring.datasource.druid.min-evictable-idle-time-millis: 300000
#配置连接前检测
spring.datasource.druid.validation-query: SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性;
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle: true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow: false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return: false
#是否缓存perparedStatement(PSCache),对于支持游标的数据库性能提升巨大
spring.datasource.druid.pool-prepared-statements: false
#要启用PSCache必须配置大于0,当大于0时,poolPreparedStatements自动触发修改为true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size: -1
#物理连接初始化的时候执行的sql
spring.datasource.druid.connection-init-sqls: SET NAMES utf8mb4;
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connect-properties.: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.connection-properties:  druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat: true